

项目地址 https://github.com/zhiyuan2007/IPC-performance-compare


在项目中，经常会遇到单机上进程间的通信，常用的进程间通信方式一般有以下几种

1 socket 

2 unixsocket

3 共享内存（share-memory)

4 管道(pipe)

5 消息队列（message-queue）

6 文件（file）

7 消息总线（比如zeromq）

8 其他中间件（比如redis， memchache， 数据库等）

如果项目仅仅是消息的传递，对性能要求不高，则以上每种方式都可以实现进程间通信，我们可以选择较容易实现的方式来运用。

如果项目对消息传递性能要求很高，则我们可能会选用unixsocket，file，或者socket等， 具体哪种方式是最快的，性能最好的，则可能不太清楚。

所以，近日针对项目需要高性能的进程间通信需求，对几种通信方式的性能进行了比较，结论如下：



由于 共享内存同步过程中使用的是sleep方法， 所以测试的结果可能有问题，所以，以下的排序中去掉共享内存，等之后采用信号量同步机制后，再进行比较。



性能综合排序结果为（从好到差）