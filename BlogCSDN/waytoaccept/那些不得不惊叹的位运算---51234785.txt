

1. 最简单莫过于用移位实现乘除运算了，置位运算也比较简单




    int a=10;
    a>>=1;//a=5;右移=除法，右移一位除以2；
    a<<=2;//a=20;左移=乘法，左移一位乘以2；
2. 循环移位


8个bit的整形循环左移k位



int a=10;//a<=255,8个bit
int b=(a>>k)|(a<<8-k);






8个bit的整形循环右移k位


int a=129;
int c=(a<<k)&255|(a>>8-k)




3.^（异或）运算，计算反码



unsigned char a=254;
a^=255;







4. x=x&(x-1)//将x最低位的1置0；


//判断是否为2的整数次方
int Is2Pow(int x)
{
    if( (x&(x-1)) == 0 ) return 1;
    else return 0;
}






//统计x中1的个数
int countx = 0,x=15;
    while(x)
    {
          countx ++;
          x = x&(x-1);//每次把最低位1置0
     }
  cout<<countx<<endl;


5.异或实现，两个存储单源，交换元素

int a=2,b=3;
a=a^b;
b=a^b;
a=a^b;
用加减法实现

a=a+b;
b=a-b;
a=a-b











   
